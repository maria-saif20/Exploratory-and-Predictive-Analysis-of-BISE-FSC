{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6586959,"sourceType":"datasetVersion","datasetId":3802326}],"dockerImageVersionId":30746,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/mariasaif/exploratory-and-predictive-analysis-of-bise-fsc?scriptVersionId=191614080\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-08-08T07:30:19.35625Z","iopub.execute_input":"2024-08-08T07:30:19.356724Z","iopub.status.idle":"2024-08-08T07:30:19.374228Z","shell.execute_reply.started":"2024-08-08T07:30:19.356687Z","shell.execute_reply":"2024-08-08T07:30:19.372459Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 1. Exploratory Data Analysis (EDA)","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:19.377145Z","iopub.execute_input":"2024-08-08T07:30:19.377672Z","iopub.status.idle":"2024-08-08T07:30:19.38462Z","shell.execute_reply.started":"2024-08-08T07:30:19.377628Z","shell.execute_reply":"2024-08-08T07:30:19.383009Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 1.1:Load the dataset","metadata":{}},{"cell_type":"code","source":"data = pd.read_csv('/kaggle/input/institutional-performance-in-bise-fsc-exam-2023/Institutional Result of Board Exams.csv')\n\n# Display the first few rows\nprint(data.head())","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:19.386368Z","iopub.execute_input":"2024-08-08T07:30:19.386744Z","iopub.status.idle":"2024-08-08T07:30:19.412497Z","shell.execute_reply.started":"2024-08-08T07:30:19.386713Z","shell.execute_reply":"2024-08-08T07:30:19.411023Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"\n# 1.2:Summary statistics","metadata":{}},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"print(data.describe())","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:19.415207Z","iopub.execute_input":"2024-08-08T07:30:19.415706Z","iopub.status.idle":"2024-08-08T07:30:19.452694Z","shell.execute_reply.started":"2024-08-08T07:30:19.415666Z","shell.execute_reply":"2024-08-08T07:30:19.451318Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 1.3:Visualize grade distribution","metadata":{}},{"cell_type":"code","source":"# Use correct column names\ngrades = ['Grade A+', 'A', 'B', 'C', 'D', 'E']\ngrade_counts = data[grades].sum()\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:20.105922Z","iopub.execute_input":"2024-08-08T07:30:20.106458Z","iopub.status.idle":"2024-08-08T07:30:20.114802Z","shell.execute_reply.started":"2024-08-08T07:30:20.106335Z","shell.execute_reply":"2024-08-08T07:30:20.113576Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 1.4:Grade distribution","metadata":{}},{"cell_type":"code","source":"\n# Plot the grade distribution\nplt.figure(figsize=(10, 6))\nsns.barplot(x=grade_counts.index, y=grade_counts.values, palette='viridis')\nplt.title('Total Students Achieving Each Grade')\nplt.xlabel('Grade')\nplt.ylabel('Number of Students')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:20.11802Z","iopub.execute_input":"2024-08-08T07:30:20.119141Z","iopub.status.idle":"2024-08-08T07:30:20.348799Z","shell.execute_reply.started":"2024-08-08T07:30:20.119092Z","shell.execute_reply":"2024-08-08T07:30:20.347542Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 1.5:Visualize passing percentage","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(10, 6))\nsns.histplot(data['Pass%'], bins=10, kde=True)\nplt.title('Passing Percentage Distribution')\nplt.xlabel('Passing Percentage')\nplt.ylabel('Number of Institutions')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:20.350902Z","iopub.execute_input":"2024-08-08T07:30:20.351363Z","iopub.status.idle":"2024-08-08T07:30:20.693645Z","shell.execute_reply.started":"2024-08-08T07:30:20.351317Z","shell.execute_reply":"2024-08-08T07:30:20.692445Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 1.6:handle missing values","metadata":{}},{"cell_type":"code","source":"\n# Check for missing values\nprint(data.isnull().sum())\n\n# Handle missing values by filling them with the mean of each column\ndata.fillna(data.mean(), inplace=True)\n\n# Verify that there are no more missing values\nprint(data.isnull().sum())\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:20.694872Z","iopub.execute_input":"2024-08-08T07:30:20.695196Z","iopub.status.idle":"2024-08-08T07:30:20.711294Z","shell.execute_reply.started":"2024-08-08T07:30:20.69517Z","shell.execute_reply":"2024-08-08T07:30:20.710278Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 2.Clustering Analysis","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.cluster import KMeans\nfrom sklearn.preprocessing import StandardScaler","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:20.713318Z","iopub.execute_input":"2024-08-08T07:30:20.713681Z","iopub.status.idle":"2024-08-08T07:30:20.723631Z","shell.execute_reply.started":"2024-08-08T07:30:20.713653Z","shell.execute_reply":"2024-08-08T07:30:20.722462Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 2.1:Scale the data","metadata":{}},{"cell_type":"code","source":"# Scale the data\nscaler = StandardScaler()\nX_scaled = scaler.fit_transform(data[['Pass%', 'Appeared']])\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:21.035191Z","iopub.execute_input":"2024-08-08T07:30:21.035617Z","iopub.status.idle":"2024-08-08T07:30:21.046665Z","shell.execute_reply.started":"2024-08-08T07:30:21.035586Z","shell.execute_reply":"2024-08-08T07:30:21.045516Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 2.2:K-Means model","metadata":{}},{"cell_type":"code","source":"# K-Means model\nkmeans = KMeans(n_clusters=3, random_state=42)\nkmeans.fit(X_scaled)","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:21.048962Z","iopub.execute_input":"2024-08-08T07:30:21.049459Z","iopub.status.idle":"2024-08-08T07:30:21.081628Z","shell.execute_reply.started":"2024-08-08T07:30:21.049419Z","shell.execute_reply":"2024-08-08T07:30:21.080628Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 2.3:Add cluster","metadata":{}},{"cell_type":"code","source":"# Add cluster labels to the dataset\ndata['Cluster'] = kmeans.labels_\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:21.844828Z","iopub.execute_input":"2024-08-08T07:30:21.845199Z","iopub.status.idle":"2024-08-08T07:30:21.85056Z","shell.execute_reply.started":"2024-08-08T07:30:21.845171Z","shell.execute_reply":"2024-08-08T07:30:21.849394Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# 2.4:Visualize clusters","metadata":{}},{"cell_type":"code","source":"\n# Visualize clusters\nplt.figure(figsize=(10, 6))\nsns.scatterplot(x='Pass%', y='Appeared', hue='Cluster', data=data, palette='viridis')\nplt.title('K-Means Clustering of Institutions')\nplt.xlabel('Passing Percentage')\nplt.ylabel('Number of Students Appeared')\nplt.legend(title='Cluster')\nplt.show()\n","metadata":{"execution":{"iopub.status.busy":"2024-08-08T07:30:21.852641Z","iopub.execute_input":"2024-08-08T07:30:21.852983Z","iopub.status.idle":"2024-08-08T07:30:22.360511Z","shell.execute_reply.started":"2024-08-08T07:30:21.852954Z","shell.execute_reply":"2024-08-08T07:30:22.359288Z"},"trusted":true},"execution_count":null,"outputs":[]}]}